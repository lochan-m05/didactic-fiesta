version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: job-discovery-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin123
      MONGO_INITDB_DATABASE: job_discovery
    volumes:
      - mongodb_data:/data/db
    networks:
      - job-discovery-network

  # Redis for caching and Celery broker
  redis:
    image: redis:7.2-alpine
    container_name: job-discovery-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass redis123
    volumes:
      - redis_data:/data
    networks:
      - job-discovery-network

  # FastAPI Backend
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: job-discovery-backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - MONGODB_URL=mongodb://admin:admin123@mongodb:27017/job_discovery?authSource=admin
      - REDIS_URL=redis://:redis123@redis:6379/0
      - CELERY_BROKER_URL=redis://:redis123@redis:6379/1
      - CELERY_RESULT_BACKEND=redis://:redis123@redis:6379/2
      - DEBUG=True
      - API_HOST=0.0.0.0
      - API_PORT=8000
    depends_on:
      - mongodb
      - redis
    volumes:
      - ../backend:/app
    networks:
      - job-discovery-network

  # React Frontend
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    container_name: job-discovery-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_ENVIRONMENT=development
    depends_on:
      - backend
    volumes:
      - ../frontend:/app
      - /app/node_modules
    networks:
      - job-discovery-network

volumes:
  mongodb_data:
  redis_data:

networks:
  job-discovery-network:
    driver: bridge
